name: Automação Tickets Migrate

on:
  schedule:
    - cron: '0 8,14 * * *'  # Executa às 8h e 14h todos os dias
  workflow_dispatch:
    inputs:
      debug_mode:
        description: 'Executar em modo debug'
        required: false
        type: boolean
        default: false

env:
  PYTHON_VERSION: '3.11'
  CHROME_VERSION: '137.0.7151.70'
  CHROMEDRIVER_VERSION: '137.0.7151.70'

jobs:
  automacao:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configurar Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Instalar dependências
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Configurar Chrome
      run: |
        wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo dpkg -i google-chrome-stable_current_amd64.deb || true
        sudo apt-get update
        sudo apt-get install -y -f
        google-chrome --version
    
    - name: Configurar ChromeDriver
      run: |
        wget -q "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/${{ env.CHROME_VERSION }}/linux64/chromedriver-linux64.zip"
        unzip chromedriver-linux64.zip
        sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        chromedriver --version
    
    - name: Criar diretórios necessários
      run: |
        mkdir -p downloads logs screenshots
    
    - name: Executar automação
      env:
        MIGRATE_EMAIL: ${{ secrets.MIGRATE_EMAIL }}
        MIGRATE_SENHA: ${{ secrets.MIGRATE_SENHA }}
        DEBUG_MODE: ${{ inputs.debug_mode }}
      run: |
        python automacao_selenium.py
    
    - name: Verificar arquivo Excel
      run: |
        if [ ! -f "downloads/file.xlsx" ]; then
          echo "❌ Arquivo Excel não foi gerado"
          exit 1
        fi
        echo "✅ Arquivo Excel gerado com sucesso"
    
    - name: Gerar log de tickets ativos
      run: |
        python gerar_log_tickets.py
    
    - name: Upload de artefatos
      uses: actions/upload-artifact@v4
      with:
        name: relatorio-automacao
        path: |
          downloads/file.xlsx
          logs/tickets_ativos.log
          logs/automacao.log
        if-no-files-found: error
    
    - name: Upload de screenshots em caso de erro
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: screenshots-erro
        path: screenshots/
        if-no-files-found: ignore
    
    - name: Limpar arquivos temporários
      if: always()
      run: |
        rm -rf downloads/*.xlsx
        rm -rf screenshots/*
