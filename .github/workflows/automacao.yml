name: Automação de Tickets

on:
  schedule:
    - cron: '0 */4 * * *'  # Roda a cada 4 horas
  workflow_dispatch:  # Permite execução manual

jobs:
  automacao:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Timeout para evitar execuções infinitas
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg2
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Install ChromeDriver
      run: |
        # Instalar Chrome for Testing
        CHROME_VERSION=$(google-chrome --version | sed 's/Google Chrome \([0-9]*\).*/\1/')
        echo "Chrome major version: $CHROME_VERSION"
        
        # Baixar ChromeDriver do Chrome for Testing
        CHROMEDRIVER_URL="https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/119.0.6045.105/linux64/chromedriver-linux64.zip"
        wget -q "$CHROMEDRIVER_URL" -O chromedriver.zip
        unzip chromedriver.zip
        
        # Mover ChromeDriver para o diretório correto
        sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        chromedriver --version
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Verify environment
      run: |
        echo "Python version: $(python --version)"
        echo "Chrome version: $(google-chrome --version)"
        echo "ChromeDriver version: $(chromedriver --version)"
        
    - name: Run automation
      env:
        MIGRATE_EMAIL: ${{ secrets.MIGRATE_EMAIL }}
        MIGRATE_SENHA: ${{ secrets.MIGRATE_SENHA }}
        GOOGLE_AI_API_KEY: ${{ secrets.GOOGLE_AI_API_KEY }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
        # Configurações adicionais para ambiente headless
        DISPLAY: :99
        CHROME_BIN: /usr/bin/google-chrome
      run: |
        # Iniciar display virtual para testes headless
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        
        # Executar automação
        python automacao_selenium.py
        
    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: automation-logs
        path: |
          *.log
          screenshots/
        retention-days: 7